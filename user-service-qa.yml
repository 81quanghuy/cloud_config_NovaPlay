# Cấu hình cho môi trường QA của User Service
server:
  port: 8700

spring:
  # Các thông tin kết nối này sẽ được cung cấp qua biến môi trường trong docker-compose.yml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
  datasource:
    # Sử dụng biến môi trường để kết nối DB, có giá trị mặc định dự phòng
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:user_service}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    stream:
      bindings:
        my-input-0:
          destination: high-throughput-topic
          group: high-throughput-group
          consumer:
            # Bật chế độ nhận message theo batch thay vì từng cái một
            # Cải thiện hiệu năng đáng kể
            batch-mode: true
            # Tăng số luồng xử lý trên MỘT instance của microservice
            # Ví dụ, nếu topic có 50 partitions và bạn chạy 5 instances, mỗi instance
            # sẽ xử lý 10 partitions. concurrency=10 sẽ tạo 10 luồng để xử lý 10 partition đó
            concurrency: 10
      kafka:
        binder:
          brokers: broker1:9092,broker2:9092,broker3:9092
        bindings:
          my-input-0:
            consumer:
              configuration:
                # Tăng số lượng record tối đa consumer lấy về trong một lần poll
                max.poll.records: 500
                # Tự động commit offset bị vô hiệu hóa khi dùng batch-mode
                # Bạn cần xử lý commit offset thủ công hoặc dùng AckMode.BATCH
                auto-commit-offset: false
                # Tăng kích thước dữ liệu tối thiểu consumer muốn lấy về
                fetch.min.bytes: 1048576 # 1MB
                # Thời gian tối đa consumer chờ để gom đủ fetch.min.bytes
                fetch.max.wait.ms: 500
# Tên ứng dụng để đăng ký với Eureka
eureka:
  instance:
    hostname: user-service
  client:
    register-with-eureka: true
    fetch-registry: true
    # service-url đã được cung cấp qua biến môi trường trong docker-compose.yml

# Các cấu hình khác giữ nguyên
management:
  endpoints:
    web:
      exposure:
        include: "*"

app:
  message: "Đây là cấu hình cho User-Service môi trường QA! 🎉"