eureka:
  instance:
    preferIpAddress: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 9000

api:
  prefix: api
  version: v1

spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # Kích hoạt tính năng định tuyến từ Eureka

      # Cấu hình các bộ lọc mặc định áp dụng cho tất cả các route
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials

      # Cấu hình CORS toàn cục để cho phép các nguồn truy cập từ các địa chỉ cụ thể
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          "[/**]":
            allow-credentials: true
            allowed-origins:
              - "http://localhost:3000"  # Cấu hình nguồn được phép
            allowed-headers:
              - "*"  # Cho phép tất cả các header
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE

      # Kích hoạt tính năng phát hiện dịch vụ để Gateway có thể tự động tạo các route từ các microservices

#springdoc:
#  swagger-ui:
#    urls:
#      - name: conversation-service
#        url: /v3/api-docs/conversation-service
#      - name: friend-service
#        url: /v3/api-docs/friend-service
#      - name: group-service
#        url: /v3/api-docs/group-service
#      - name: media-service
#        url: /v3/api-docs/media-service
#      - name: notification-service
#        url: /v3/api-docs/notification-service
#      - name: post-service
#        url: /v3/api-docs/post-service
#      - name: user-service
#        url: /v3/api-docs/user-service
#      - name: exam-service
#        url: /v3/api-docs/exam-service
#      - name: survey-service
#        url: /v3/api-docs/survey-service
#      - name: report-service
#        url: /v3/api-docs/report-service
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: unrestricted
  info:
    env:
      enabled: true

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1