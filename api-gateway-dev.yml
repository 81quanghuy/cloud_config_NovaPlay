# ===================================================================
# SERVER AND EUREKA CONFIGURATION
# ===================================================================
server:
  port: 8072

eureka:
  instance:
    preferIpAddress: true
  client:
    register-with-eureka: false
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

# ===================================================================
# SPRING BOOT APPLICATION CONFIGURATION
# ===================================================================
spring:
  application:
    name: api-gateway

  # ===================================================================
  # REDIS CONFIGURATION (For Rate Limiter)
  # ===================================================================
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s

  # ===================================================================
  # SPRING CLOUD GATEWAY CONFIGURATION
  # ===================================================================
  cloud:
    gateway:
      # Enables routing based on service IDs discovered from Eureka.
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true
      httpclient:
        connect-timeout: 1000
        response-timeout: 10s
      cors:
        allowed-origins:
            - "http://localhost:5173" # Allow frontend dev to access

# ===================================================================
# ACTUATOR CONFIGURATION (For Monitoring)
# ===================================================================
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

# ===================================================================
# LOGGING CONFIGURATION
# ===================================================================
logging:
  level:
    # Set log level to DEBUG for gateway-specific packages for detailed logging.
    vn:
      iotstar:
        apigateway: DEBUG
    org:
      springframework:
        cloud:
          gateway: INFO
  pattern:
    # Log pattern including application name and tracing IDs (for Zipkin/Sleuth).
    level: "%5p [${spring.application.name},%X{traceId},%X{spanId}]"


# ===================================================================
# RESILIENCE4J CONFIGURATION (For Circuit Breaker, Rate Limiter, etc.)
# ===================================================================
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000