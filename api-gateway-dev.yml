eureka:
  instance:
    preferIpAddress: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
server:
  port: 8072
spring:
  application:
    name: api-gateway
  data:
    redis:
      connect-timeout: 2s
      host: localhost
      port: 6379
      timeout: 1s
  security:
    oauth2:
      resourceserver:
        jwt:
          # Đây là URI mà Spring Security sẽ dùng để lấy thông tin cấu hình
          # của OpenID Connect provider, bao gồm cả jwk-set-uri
          issuer-uri: http://localhost:7080/realms/novaplay
          # jwk-set-uri: http://localhost:8080/realms/phim-online-realm/protocol/openid-connect/certs

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true  # Kích hoạt tính năng định tuyến từ Eureka
          lowerCaseServiceId: true
      httpclient:
        connect-timeout: 1000  # Thời gian kết nối tối đa
        response-timeout: 10s  # Thời gian phản hồi tối đa
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      access: unrestricted
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 500
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      ignoreExceptions:
        - java.lang.NullPointerException
      retryExceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  configs:
    default:
      timeoutDuration: 1000
      limitRefreshPeriod: 5000
      limitForPeriod: 1
logging:
  level:
    vn:
      iotstar:
        apigateway: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"